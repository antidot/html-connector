/*
 File: guide-all.js */
(window.webpackJsonp=window.webpackJsonp||[]).push([[96,48,242,248],{1799:function(f,e,c){c(189);c(1800);c(1801);c(561);c(191);c(511);c(512);c(1802);c(513);c(1803);c(195);c(1804);c(264);c(276);c(265);c(190);c(1805);c(1806);c(1807);c(1808);c(277);c(1809);c(1810);c(278);c(279);c(281);c(283);c(1811);c(1812);c(1813);c(1814)},1800:function(f,e,c){onDomReady(function(){$$(".close-callout").each(function(a){var b=a.getParent(".page-callout"),d=b.get("data-callout");b.get("data-callout-link");"closed"!==
Cookie.read(d)&&(b.show(),a.addEvent("click",function(a){b.hide();a.stop();Cookie.write(d,"closed",{duration:365})}))})})},1801:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a};(e.Button=window.Button={}).Toggle=new Class({Implements:[Events,Options],options:{activeClass:"active",
defaultText:"Loading...",dataType:"value",childType:"button",event:"click",callback:""},initialize:function(a,d){this.container=document.id(a);this.setOptions(d);this.buttons=this.container.getChildren(this.options.childType);this.buttons.each(function(a){a.addEvent(this.options.event,this.toggle.bind(this))}.bind(this))},toggle:function(b){b.stop();var d=this.options,h=b.target.get("tag")!==d.childType?b.target.getParent():b.target;h.get("data-"+d.dataType);h.hasClass(d.activeClass)||(this.setActive(h,
d.activeClass),a(d.callback)==("undefined"==typeof Function?"undefined":a(Function))&&d.callback(b))},untoggle:function(){this.setActive(this.prevToggle,this.options.activeClass)},setActive:function(a,d){a.getSiblings().each(function(a){a.hasClass(d)&&(this.prevToggle=a,a.removeClass(d))}.bind(this));a.addClass(d)}})},1802:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});e.DeviceFinder=window.DeviceFinder={initialize:function(a,b){this.options=b||{};b=new SuggestDevices(a,Object.merge({maxChoices:6,
doctypes:"device",showImages:!0},this.options));this.options.onHide&&a.addEvent("keyup:pause(100)",this.options.onHide.bind(b))}}},1803:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});onDomReady(function(){a.initialize()});var a=e.Dropdowns=window.Dropdowns={dropdownToggleClass:".dropdown-toggle",dropdownClass:".dropdown",initialize:function(){var a=$$(this.dropdownToggleClass);0<a.length&&($$("html").addEvent("click",function(b){var d=b.target.getParent();a.getParent().each(function(a){a!=
d&&a.hasClass("open")&&a.removeClass("open")})}),a.addEvent("click",function(a){a.preventDefault();a.target.getParent().toggleClass("open");a.target.focus()}))}}},1804:function(f,e,c){window.addEvent("keydown",function(a){if("enter"==a.key&&(a.meta||a.control)&&a.target.match("textarea, input[type\x3d'text']")){var b=a.target.getParent("form");if(b)b.fireEvent("submit");else if(a=a.target.getParent("[data-submit-button]"))b=a.get("data-submit-button"),a.getChildren("."+b)[0].click()}})},1805:function(f,
e,c){Object.defineProperty(e,"__esModule",{value:!0});onDomReady(function(){a.addEvents()});var a=e.Icons=window.Icons={addEvents:function(a,d){a||(a=$(document.body));return a.getElements(".iconLink").each(function(a){if(d||!a.retrieve("iconEventAdded",!1)){var b=function(a){a=a.getElements("img");2==a.length&&a.invoke("toggleClass","hidden")}.pass(a);a.store("iconEventAdded",!0);a.addEvents({mouseenter:b,mouseleave:b})}}),a}}},1806:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});
f=e.Tabs=window.Tabs=new Class({Implements:[Options,Events],options:{selector:"li a",attribute:"rel",id:/^(.+)$/},initialize:function(a,b){this.setOptions(b);this.tabs=[];this.tabsByName=new Hash;this.selected=null;$(a).getElements(this.options.selector).each(function(a){this.addTab(a)},this)},addTab:function(a){var b=a.get(this.options.attribute).match(this.options.id)[1],d=$(b),h={id:b,label:a,content:d};this.tabs.push(h);this.tabsByName.set(b,h);a.addEvent("click",function(a,b){a.stop();this.select(b)}.bind(this,
h));this.selected||null!=this.options.active&&b!=this.options.active?d.hide():this.select(h)},select:function(a){if("string"==typeOf(a)&&(a=this.tabsByName.get(a)),this.selected){if(this.selected==a)return!1;this.selected.label.removeClass("active");this.selected.content.hide()}return a.label.addClass("active"),a.content.show(),this.selected=a,!1},getSelected:function(){return this.selected.content.get("id")}});e.ModalTabs=window.ModalTabs=new Class({Extends:f,select:function(a){if("string"==typeOf(a)&&
(a=this.tabsByName.get(a)),this.selected){if(this.selected==a)return!1;this.selected.label.removeClass("active");this.selected.content.hide();this.fireEvent("on"+this.selected.id+"Unload")}a.label.addClass("active");a.content.show();this.selected=a;return!1}})},1807:function(f,e,c){onDomReady(function(){document.addEvent("click:relay(.js-toggle-trigger)",function(){var a=this.getParent(".toggle-container");this.getChildren(".js-update-status").toggleClass("hidden");a.toggleClass("toggled");a.fireEvent("toggle")})})},
1808:function(f,e,c){when($("helptab"),function(a){(function(){TweenMax.to(a,.6,{right:-95,ease:Bounce.easeOut})}).delay(1E3);a.addEvents({mouseenter:function(){TweenMax.to(a,.3,{right:-40})},mouseleave:function(){TweenMax.to(a,.3,{right:-95})},click:function(){return trackEvent("Help Tab","Click"),!0}})})},1809:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==
typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a};onDomReady(function(){$$("img."+b.enableClass+":not(.lazyload)").each(b.installMenu);window.addEventListener("lazyloaded",function(a){a.target.hasClass(b.enableClass)&&(1!=a.target.lazyloaded?b.installMenu(a.target):a.target.lazyloaded=1)})});var b=e.ImageMenu=window.ImageMenu=new Class({Implements:[Options,Events],options:{},enabled:!1,showing:!1,initialize:function(a,b,g){this.setOptions(g);this.img=a;this.guid=b;this.menu=
new Element("ul");this.menu.setAttribute("class","imageMenu");this.img.addEvents({mouseenter:this.show.bind(this),mouseleave:this.mouseLeave.bind(this)});this.enable()},show:function(){if(this.enabled){if(this.showing)return null;for(var a,b=this.img;"div"!=(a=b.getParent()).get("tag");)b=a;this.menu.inject(b,"before");var g;a=this.img.getPosition(this.img.getOffsetParent());0<(g=parseInt(this.img.getStyle("border-left-width"),10))&&(a.x+=g);0<(g=parseInt(this.img.getStyle("border-top-width"),10))&&
(a.y+=g);this.menu.setStyles({left:a.x,top:a.y,opacity:0});TweenLite.to(this.menu,.2,{opacity:1});this.showing=!0;this.fireEvent("menushow")}return this},hide:function(){return TweenLite.to(this.menu,.2,{opacity:0,onComplete:this.dispose,onCompleteParams:[this.menu]}),this.showing=!1,this.fireEvent("menuhide"),this},dispose:function(a){a.dispose()},mouseLeave:function(a){(a=a.event.relatedTarget)&&a!=this.menu&&$(a).getParent("ul")!=this.menu&&this.hide()},enable:function(){return this.enabled=!0,
this},disable:function(){return this.enabled=!1,this},addItem:function(b,h,g){b=new Element("a",{html:b});var d=void 0===h?"undefined":a(h);"string"==d?(d=h.substitute({guid:this.guid}),b.setAttribute("href",d)):"function"==d&&b.addEvent("click",function(a){a.stop();h(this.guid,this.img.getParent())}.bind(this));return g&&b.set(g),(new Element("li")).adopt(b).inject(this.menu)},hideItem:function(a){a.hide()},showItem:function(a){a.show()}});b.enableClass="hasMenu";b.installMenu=function(a){var d;
if(!a.hasClass(b.enableClass)||!(d=b.parseSrc(a)))return null;var g=new b(a,d.guid);return g.addItem(window.guide_constants.fa("SEARCH_PLUS")+" ",window.shared_constants.GuideURI("GUIDE_IMAGE_REDIRECT_ORIGINAL")+d.guid,{target:"_blank",title:_js("View Original"),rel:"nofollow"}),!a.hasClass("noCopy")&&Auth.isLoggedIn()&&g.addItem(window.guide_constants.fa("FILES_O"),function(a,b){MediaItem.copyToMediaLibrary(a,"GuideImage",null,b)},{title:_js("Copy to Media Manager"),class:"copy-media",rel:"nofollow"}),
g.addItem(window.guide_constants.fa("INFO_CIRCLE"),window.shared_constants.GuideURI("GUIDE_IMAGE_METADATA")+d.guid,{title:_js("View Metadata"),class:"media-metadata",rel:"nofollow"}),a.store("ImageMenu:imageMenu",g),g};b.getMenu=function(a){return a.retrieve("ImageMenu:imageMenu")};b.parseSrc=function(a){a=(a.getAttribute("data-src")||a.getAttribute("src")).match(/\/([a-zA-Z0-9]+)(\.(\w+))?($|\?)/);return!!a&&{guid:a[1],size:a[2]}}},1810:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});
e.WikiTextEditor=window.WikiTextEditor=new Class({Implements:[Options],options:{toolbarItems:"heading bold italic underline ul ol link glossary".split(" "),className:"wikiTextEditorToolbar",helpLink:null,helpText:null,listHelper:!0,tooltipOptions:{side:"top",align:"left",autoshow:"true"}},textarea:null,toolbar:null,bindings:{},selection:null,initialize:function(a,b,d){(this.setOptions(d),this.textarea=$(a),b)?this.toolbar=$(b):(a=this.textarea.getPrevious(),b=this.options.className.split(" "),a&&
a.hasClass(b[0])?this.toolbar=a:(this.toolbar=new Element("ul",{class:this.options.className}),this.toolbar.inject(this.textarea,"before")));this.buildToolbar();this.installKeyListener();this.installClipboardListener();this.options.listHelper&&this.installListHelper()},buildToolbar:function(){this.options.helpLink&&this.toolbar.adopt((new Element("li",{class:"toolbarHelp"})).adopt((new Element("a",{href:this.options.helpLink,class:"muted",alt:this.options.helpText||_js("Help"),title:this.options.helpText||
_js("Help"),target:"_BLANK"})).adopt(new Element("i",{class:"fa fa-question-circle"}))));this.options.toolbarItems.each(function(a){this["add"+(a=this.toolbarItems[a])[0].capitalize()+"Item"].apply(this,Array.convert(a.slice(1)))}.bind(this))},toolbarItems:{heading:["heading",2,_js("Make heading")],bold:["wrapper","Bold","'''",_js("bold text"),_js("Make text bold"),"C-b"],italic:["wrapper","Italic","''",_js("italic text"),_js("Make text italic"),"C-i"],underline:["wrapper","Underline","++",_js("Underlined text"),
_js("Make text underlined"),"C-u"],ul:["list","List","*",_js("Make list"),"C-2"],ol:["list","Numbered list","#",_js("Make numbered list"),"C-3"],link:["link","C-l"],glossary:["glossary"],media:["media"],image:["image"],video:["video"]},addHeadingItem:function(a,b){for(var d=this.makeItemId("Heading"+a),h=_js("Heading")+" "+a,g="",c=0;c<a;c++)g+="\x3d";this.addFunction(h,function(){this.wrapSelection({before:g+" ",defaultMiddle:_js("Heading text"),after:" "+g})},{class:d,icon:"header",tooltip:b})},
addWrapperItem:function(a,b,d,h,g){var c=this.makeItemId(a);this.addFunction(a,function(){if(this.wrapSelection({before:b,defaultMiddle:d,after:b}),g)return!1},{class:c,icon:a.toLowerCase(),tooltip:h},g)},addListItem:function(a,b,d,h){var g=this.makeItemId(a),c=_js("Hit \x3center\x3e to insert another list item, and \x3center\x3e twice in a row to end the list. To get subitems, repeat the bullet character once for each level of indent you want (e.g. %1%1)","\x3cbullet\x3e"),e="\x3cbullet\x3e "+c;
this.addFunction(a,function(){if(this.replaceMultilineSelection({eachLine:function(a){return b+" "+a},defaultText:{text:e.replace(/<bullet>/g,b),select:c.replace(/<bullet>/g,b)}}),h)return!1},{class:g,icon:"*"===b?"list-ul":"list-ol",tooltip:d},h)},addLinkItem:function(){this.addFunction(_js("Link"),function(){var a=this.textarea.getSelectedText(),b="",d="";""!==a&&(a.test(/^https?:\/\//)?b=a:a.test(/^([^.\s\/]+\.)+[^.\s\/]{2,7}/)?b="http://"+a:d=a);Modal.open({type:"form",defaultWidth:!0,form:FormLibrary.create({id:"wikiTextEditorLinkForm",
class:"wikiTextEditorModal",fields:{url:{label:_js("Link URL"),type:"text",value:b,properties:{id:"wikiTextEditorURLEntry"}},linkText:{label:_js("Link Text (optional)"),type:"text",value:d,properties:{id:"wikiTextEditorLinkTextEntry"}}},submit:_js("Insert link")}),onSubmit:function(a){var b=a.linkText?"|"+a.linkText:"";a=a.url;/https?:\/\//.test(a)||(a="http://"+a);a=this.encodeWikiSyntax(a);this.setStoredSelection();this.insertAtCursor("["+a+b+"]")}.bind(this),onLoaded:function(){b&&$("wikiTextEditorLinkTextEntry").focus()}});
a=(new Element("button",{type:"button",class:"button cancel-link",text:_js("Cancel")})).addEvent("click",Modal.cancel);$$(".wikiTextEditorModal .formBody").adopt(a)},{class:this.makeItemId("Link"),icon:"link",tooltip:_js("Insert a link")})},addGlossaryItem:function(){this.addFunction(_js("Glossary"),function(){var a=this.textarea.getSelectedText();""!==a&&75>=a.length?Modal.open({type:"module",name:"Glossary",serverOptions:{original:a.trim()}}):75<a.length?Modal.open({type:"message",message:_js("Your phrase contains too many characters. Max: 75")}):
Modal.open({type:"message",message:_js("Please select the word or phrase to be added to your glossary.")})},{class:this.makeItemId("Glossary"),icon:"book",tooltip:_js("Add selected word or phrase to translation glossary")})},addVideoItem:function(){this.addFunction(_js("Video"),function(){var a=this.textarea.getSelectedText();""===a?(Modal.open({type:"form",defaultWidth:!0,form:FormLibrary.create({id:"wikiTextEditorVideoForm",class:"wikiTextEditorModal",fields:{videoUrl:{label:_js("YouTube or Vimeo Video URL"),
type:"text",properties:{id:"wikiTextEditorVideoURLEntry"}},videoCaption:{label:_js("Video Caption (optional)"),type:"text",properties:{id:"wikiTextEditorVideoTextEntry"}}},submit:_js("Insert video")}),onSubmit:function(a){var b=a.videoCaption?"]"+a.videoCaption+"[/video]":"";this.setStoredSelection();/https?:\/\//.test(a.videoUrl)||(a.videoUrl="http://"+a.videoUrl);this.insertAtCursor("[video|"+a.videoUrl+b+"]")}.bind(this)}),a=(new Element("button",{type:"button",class:"button cancel-link",text:_js("Cancel")})).addEvent("click",
Modal.cancel),$$(".wikiTextEditorModal .formBody").adopt(a)):a.test(/^https?:\/\//)?this.replaceSelectionWithTemplate({before:"[video|",select:a+"]"+_js("Video caption"),after:"[/video]"}):a.test(/^([^.\s\/]+\.)+[^.\s\/]{2,7}/)?this.replaceSelectionWithTemplate({before:"[video|",select:a+"]"+_js("Video caption"),after:"[/video]"}):this.replaceSelectionWithTemplate({before:"[video|",select:"{"+_js("Insert Video URL Here")+"}",after:"]"})},{class:this.makeItemId("Video"),icon:"video-camera",tooltip:_js("Insert a Youtube or Vimeo video")})},
addImageItem:function(){this.addFunction(_js("Image"),function(){},{class:this.makeItemId("Image"),icon:"image",tooltip:_js("Insert an image")})},addMediaItem:function(){var a=this;this.mediaTarget=new MinimalMediaTarget({customAttach:function(b,d){b&&(a.textarea.focus(),a.insertAtCursor(b.toWikiText(),!1));d(null,!0)},accepts:"wiki_media"});this.addFunction(_js("Media"),function(){MediaManager.browse(a.mediaTarget)},{class:this.makeItemId("Media"),icon:"image",tooltip:_js("Insert an image or video")})},
addFunction:function(a,b,d,c){var g=new Element("li"),h=a.replace(/[^ a-zA-Z0-9-_]/g,"").replace(/\s+/,"-");h=new Element("a",{events:{mousedown:function(a){this.selection=this.textarea.getSelectedRange()}.bind(this),click:function(d){d.stop();this.setStoredSelection();b.apply(this,Array.convert(null));trackEvent("Wiki Text Editor","Toolbar Item Clicked",a)}.bind(this)},href:"#"+h.toLowerCase(),tabindex:1E3});h.adopt(new Element("span",{text:a}));h.adopt(new Element("i",{class:"fa fa-"+d.icon}));
h.setProperties(d||{});h.inject(g,"bottom");g.inject(this.toolbar);Tooltip.instance(h,d.tooltip,this.options.tooltipOptions);c&&this.addBinding(c,b)},makeItemId:function(a){return"wikiTextEditor"+a.replace(/\s+/g,"-").camelCase().capitalize()+"Item"},setStoredSelection:function(){this.selection&&this.textarea.selectRange(this.selection.start,this.selection.end)},insertAtCursor:function(a,b){this.textarea.insertAtCursor(a,Array.pick([b,!1]))},wrapSelection:function(a){var b=this.textarea.getSelectedText();
""!==b?this.textarea.insertAtCursor(a.before+b+a.after,!1):this.textarea.insertAroundCursor(a)},replaceMultilineSelection:function(a){var b=this.textarea.getSelectedText();if(""!==b){var d=a.eachLine,c=[];b.split("\n").each(function(a){""!==a&&c.push(d.apply(this,Array.convert(a)))},this);this.textarea.insertAtCursor(c.join("\n"),!1)}else{b=this.textarea.getSelectionStart();var g=a.defaultText.text;if(this.textarea.insertAtCursor(g,!1),a.defaultText.select)a=a.defaultText.select,g=g.indexOf(a),-1!=
g&&(b+=g,this.textarea.selectRange(b,b+a.length))}},replaceSelectionWithTemplate:function(a){a=Object.merge({before:"",select:"",after:""},a);this.textarea.insertAtCursor(a.before,!1);this.textarea.insertAroundCursor({before:"",defaultMiddle:a.select,after:a.after})},installListHelper:function(){var a=Hash.getValues(this.toolbarItems).map(function(a){return"list"==a[0]?a[2]:null}).clean().join(""),b=new RegExp("^(["+a+"]+)(.*)$"),d=new RegExp("^[\\s"+a+"]*$");this.addBinding("enter",function(){var a=
this.textarea.getSelectionStart(),c=this.textarea.getSelectionEnd(),e=this.textarea.value.substring(0,a).split("\n"),f=e.pop().match(b);if(f)return/^\s*$/.test(f[2])?(a=e.join("\n")+"\n\n",a.test(d)&&(a=""),this.textarea.selectRange(0,c),this.textarea.insertAtCursor(a,!1),this.textarea.setCaretPosition(a.length+1)):(c="\n"+f[1]+" ",this.textarea.insertAtCursor(c,!1),this.textarea.setCaretPosition(a+c.length)),!1})},installKeyListener:function(){this.textarea.addEvent("keypress",function(a){var b=
[];["shift","control","alt","meta"].each(function(d){a[d]&&b.push(d.capitalize().substring(0,1))});b.push(a.key);var d=b.join("-"),c=!0;this.bindings[d]&&(this.bindings[d].each(function(b){!1===b.apply(this,Array.convert(a))&&(c=!1)},this),c||a.stop())}.bind(this))},installClipboardListener:function(){this.textarea.addEventListener("paste",function(a){var b;if(window.clipboardData&&window.clipboardData.getData?(b=window.clipboardData.getData("Text"),a=window.event):a.clipboardData&&a.clipboardData.getData&&
(b=a.clipboardData.getData("text/plain")),b&&b.test(/^https?:\/\/[^\s]+$/))a.preventDefault?a.preventDefault():a.returnValue=!1,a=this.encodeWikiSyntax(b),this.textarea.insertAtCursor(a,!1)}.bind(this))},addBinding:function(a,b){this.bindings[a]?this.bindings[a].push(b):this.bindings[a]=[b]},encodeWikiSyntax:function(a){return a.replace(/[[|\]]/g,function(a){return encodeURIComponent(a[0])})}})},1811:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});Class.refactor(Drag,{attach:function(){return this.handles.addEvent("touchstart",
this.bound.start),this.previous.apply(this,arguments)},detach:function(){return this.handles.removeEvent("touchstart",this.bound.start),this.previous.apply(this,arguments)},start:function(a){a.preventDefault();document.body.addEvents({touchmove:this.bound.check,touchend:this.bound.cancel});this.previous.apply(this,arguments)},check:function(a){a.preventDefault();this.options.preventDefault&&a.preventDefault();Math.round(Math.sqrt(Math.pow(a.page.x-this.mouse.start.x,2)+Math.pow(a.page.y-this.mouse.start.y,
2)))>this.options.snap&&(this.cancel(),this.document.addEvents({mousemove:this.bound.drag,mouseup:this.bound.stop}),document.body.addEvents({touchmove:this.bound.drag,touchend:this.bound.stop}),this.fireEvent("start",[this.element,a]).fireEvent("snap",this.element))},cancel:function(a){return document.body.removeEvents({touchmove:this.bound.check,touchend:this.bound.cancel}),this.previous.apply(this,arguments)},stop:function(a){return document.body.removeEvents({touchmove:this.bound.drag,touchend:this.bound.stop}),
this.previous.apply(this,arguments)}});e.RangeSlider=window.RangeSlider=new Class({Implements:[Options,Events],options:{type:"double",range:[0,100],position:[null,null],steps:null,precision:0,knobClasses:"",rangeClasses:""},initialize:function(a,b){this.initOptions(b);this.element=a;this.rangeElement=new Element("span",{class:this.options.rangeClasses});this.knobs=[new Element("div",{class:this.options.knobClasses}),new Element("div",{class:this.options.knobClasses})];a=new Element("div",{class:"sliderGutter"});
this.element.adopt(this.rangeElement,this.knobs[0],this.knobs[1],a);this.initOrentation();this.initDimensions();this.prepareElements();this.updateKnobRange();this.fireEvent("change",[Math.round(this.position[0],this.options.precision),Math.round(this.position[1],this.options.precision)]);"single"===this.type&&this.knobs[1].toggle()},initOptions:function(a){this.setOptions(a);this.type=this.options.type;this.previousPosition=this.position=this.options.position;this.position[0]=this.clamp(this.options.position[0]);
this.position[1]=this.clamp(this.options.position[1]);this.options.knobClasses+=" sliderKnob";this.options.rangeClasses+=" sliderRange"},initOrentation:function(){var a=this.element.getSize();a.x>=a.y?Object.append(this,{axis:"x",property:"left",sizeProperty:"width"}):Object.append(this,{axis:"y",sizeProperty:"height"})},initDimensions:function(){this.offset=this.options.range[0];this.pixelRange=this.element.getSize()[this.axis];this.range=this.options.range[1]-this.options.range[0];this.grid=null!==
this.options.steps?this.pixelRange/this.options.steps:null},prepareElements:function(){var a=this.getKnobLocations(this.options.position[0],this.options.position[1]);this.knobs[0].setStyle(this.property,a[0]);this.knobs[1].setStyle(this.property,a[1]);this.updateRangeElement();a={unit:"px",modifiers:{x:"left",y:"top"},onComplete:this.onComplete.bind(this),onDrag:this.onChange.bind(this)};null!==this.grid&&(a.grid=this.grid);this.drags=[new Drag(this.knobs[0],a),new Drag(this.knobs[1],a)]},getKnobOffset:function(a){return this.knobs[a].getStyle(this.property).toInt()},
getKnobSize:function(a){return this.knobs[a].getSize()[this.axis].toInt()},clamp:function(a){var b=this.options.range[0],d=this.options.range[1];return null===a?b:Math.min(Math.max(a,b),d)},updateRangeElement:function(){var a=this.getKnobOffset(0);if("single"===this.type)this.rangeElement.setStyle(this.property,"0"),this.rangeElement.setStyle(this.sizeProperty,a+this.getKnobSize(0)+"px");else{var b=this.getKnobOffset(1);this.rangeElement.setStyle(this.property,a+"px");this.rangeElement.setStyle(this.sizeProperty,
b-a+this.getKnobSize(1)+"px")}},updateKnobRange:function(){var a={x:null,y:null};Object.each(a,function(b,d,c){d!=this.axis&&(a[d]=[0,0])},this);"single"===this.type?(this.drags[0].options.limit=a,this.drags[0].options.limit[this.axis]=[0,this.pixelRange-this.getKnobSize(0)]):(this.drags[0].options.limit=Object.clone(a),this.drags[0].options.limit[this.axis]=[0,this.getKnobOffset(1)-this.getKnobSize(0)],this.drags[1].options.limit=a,this.drags[1].options.limit[this.axis]=[this.getKnobOffset(0)+this.getKnobSize(0),
this.pixelRange-this.getKnobSize(1)])},updatePosition:function(a,b){this.position=this.getKnobValues()},onStart:function(a){this.fireEvent("start")},getKnobValues:function(){if("single"===this.type){var a=this.getKnobOffset(0)*this.range/(this.pixelRange-this.getKnobSize(0));a=Math.round(a,this.options.precision)+this.offset;return[a,a]}var b=this.pixelRange-(this.getKnobSize(0)+this.getKnobSize(1));a=this.getKnobOffset(0)*this.range/b;b=(this.getKnobOffset(1)-this.getKnobSize(1))*this.range/b;return[Math.round(a,
this.options.precision)+this.offset,Math.round(b,this.options.precision)+this.offset]},getKnobLocations:function(a,b){if("single"===this.type)return a===this.options.range[0]&&(a=b),b=this.pixelRange-this.getKnobSize(0),a=Math.round(b*a/this.range,this.options.precision),[a+"px",a+this.getKnobSize(1)+"px"];var d=this.pixelRange-(this.getKnobSize(0)+this.getKnobSize(1));return[Math.round(d*a/this.range,this.options.precision)+"px",Math.round(d*b/this.range,this.options.precision)+this.getKnobSize(1)+
"px"]},onChange:function(a){this.previousPosition=[null,null];this.updatePosition();this.updateRangeElement();this.fireEvent("change",this.position)},onComplete:function(a){this.updatePosition();this.updateKnobRange();this.updateRangeElement();this.fireEvent("complete",this.position)},toggleType:function(){this.knobs[1].toggle();"single"===this.type?(this.type="double",null!==this.previousPosition[0]?this.set(this.previousPosition[0],this.previousPosition[1]):(this.previousPosition=this.position,
this.set(this.position[0],this.position[1]))):(this.type="single",null!==this.previousPosition[0]?this.previousPosition[0]===this.options.range[0]?this.set(this.previousPosition[1]):this.set(this.previousPosition[0]):(this.previousPosition=this.position,this.set(this.position[1])))},set:function(a,b){void 0===b?b=a:b<a?b=a=b:b==a&&(a==this.options.range[0]?b+=1:--a);a=this.getKnobLocations(a,b);this.knobs[0].setStyle(this.property,a[0]);this.knobs[1].setStyle(this.property,a[1]);this.onComplete()}})},
1812:function(f,e,c){onDomReady(function(){$$(".keyboard-shortcuts").addEvent("click",function(){Modal.open({type:"element",element:$("shortcuts-modal")})})})},1813:function(f,e,c){onDomReady(function(){function a(a,d){if(0==(a=a.filter(':not([data-value\x3d"'+d+'"])')).length)return null;var b={};return a.each(function(a){b[a.get("data-name")]=d}),(new Request.API_2_0(App.preferencesAPIPath,{method:"PATCH"})).send(b).then(function(){return a.set("data-value",d),a.each(function(a){a.getElements("input").removeProperty("checked").filter('[value\x3d"'+
d+'"]').set("checked","checked")}),Utils.timeoutPromise(100)})}$$(".preferences-edit input").addEvent("click",LoadingIndicator.withEventHandler(function(b){b.preventDefault();b=this.getParent(".preference");var d=this.get("value");return a(new Elements([b]),d)},{disableEventHandler:!1,inputTypesToDisable:".preference, .ifixit-control"}));$$(".preferences-edit .group-label").addEvent("click",LoadingIndicator.withEventHandler(function(b){return a(this.getParent(".value-group").getElements(".preference"),
this.get("data-value"))},{disableEventHandler:!1,inputTypesToDisable:".value-group, .ifixit-control"}))})},1814:function(f,e,c){onDomReady(function(){when($$(".js-page-navigation"),ContentDropdownGroup)})},276:function(f,e,c){function a(){$$("textarea").each(function(a){var b=window.opera?a.offsetHeight+parseInt(window.getComputedStyle(a,null).getPropertyValue("border-top-width")):a.offsetHeight-a.clientHeight,c=300,e=a.getSize().y;a.addEventListener&&a.addEventListener("input",function(d){a.style.height=
e;a.style.overflow="auto";a.scrollHeight>=e&&a.scrollHeight<c?a.style.height=a.scrollHeight+b+"px":a.scrollHeight>c&&(a.style.height=c+"px");!0});a.addEventListener&&a.addEventListener("mouseup",function(b){a.getSize().y!==e&&(e=c=a.getSize().y)})})}Object.defineProperty(e,"__esModule",{value:!0});onDomReady(a);e.makeTextareasResizable=a;window.makeTextareasResizable=a},277:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});onDomReady(function(){$("notifications")&&a.initialize()});
var a=e.Notifications=window.Notifications={container:null,initialize:function(){this.container=$("notifications");var a=$$("#notifications .notification");if(0===a.length)return!1;var d=a.map(function(a){return a.get("id")});this.container.setStyles({position:Browser.ie?"absolute":"fixed",top:"0px",left:"0px"});a=this.getContainerHeight();var c=this.getBGY(),e=c+a;$(document.body).setStyle("padding-top",a);this.setBGY(e);this.container.show();this.container.addEvent("click",function(a){a.stop();
(new Request.AjaxIO("ajaxRemoveNotification")).send(d);TweenMax.to(document.body,.3,{"padding-top":0});this.setBGY(c);$$(".notification").each(function(a){null!==a&&a.nix(!0)});null!=this.container&&(Browser.ie?this.container.dispose():this.container.nix(!0))}.bind(this));this.container.getChildren("div").each(function(a){a.getChildren("a").each(function(a){a.addEvent("click",function(a){a.stopPropagation()})})})},getContainerHeight:function(){var a;return this.container.makeInvisible().show(),a=
this.container.getSize().y,this.container.hide().makeVisible(),a},getBGY:function(){var a=$(document.body);return(a=(a.getStyle("background-position-y")||a.getStyle("background-position")||"").match(/(-?\d+)px$/))?parseInt(a[1],10):0},setBGY:function(a){var b=$(document.body);if(b.getStyle("background-position-y"))b.setStyle("background-position-y",a+"px");else{var c=b.getStyle("background-position").split(/ +/)[0];b.setStyle("background-position",c+" "+a+"px")}},getHeight:function(){var a=0;return $("notifications")&&
(a=$("notifications").getHeight()),a}}},279:function(f,e,c){c(12)(c(280))},280:function(f,e){f.exports="/*! videojs-resolution-switcher - 2015-7-26\n * Copyright (c) 2016 Kasper Moskwiak\n * Modified by Pierre Kraft and Derk-Jan Hartman\n * Licensed under the Apache-2.0 license. */\n\n(function() {\n  /* jshint eqnull: true*/\n  /* global require */\n  'use strict';\n  var videojs \x3d null;\n  if(typeof window.videojs \x3d\x3d\x3d 'undefined' \x26\x26 typeof require \x3d\x3d\x3d 'function') {\n    videojs \x3d require('video.js');\n  } else {\n    videojs \x3d window.videojs;\n  }\n\n  (function(window, videojs) {\n    var videoJsResolutionSwitcher,\n      defaults \x3d {\n        ui: true\n      };\n\n    /*\n     * Resolution menu item\n     */\n    var MenuItem \x3d videojs.getComponent('MenuItem');\n    var ResolutionMenuItem \x3d videojs.extend(MenuItem, {\n      constructor: function(player, options){\n        options.selectable \x3d true;\n        // Sets this.player_, this.options_ and initializes the component\n        MenuItem.call(this, player, options);\n        this.src \x3d options.src;\n\n        player.on('resolutionchange', videojs.bind(this, this.update));\n      }\n    } );\n    ResolutionMenuItem.prototype.handleClick \x3d function(event){\n      MenuItem.prototype.handleClick.call(this,event);\n      this.player_.currentResolution(this.options_.label);\n    };\n    ResolutionMenuItem.prototype.update \x3d function(){\n      var selection \x3d this.player_.currentResolution();\n      this.selected(this.options_.label \x3d\x3d\x3d selection.label);\n    };\n    MenuItem.registerComponent('ResolutionMenuItem', ResolutionMenuItem);\n\n    /*\n     * Resolution menu button\n     */\n    var MenuButton \x3d videojs.getComponent('MenuButton');\n    var ResolutionMenuButton \x3d videojs.extend(MenuButton, {\n      constructor: function(player, options){\n        this.label \x3d document.createElement('span');\n        options.label \x3d 'Quality';\n        // Sets this.player_, this.options_ and initializes the component\n        MenuButton.call(this, player, options);\n        this.el().setAttribute('aria-label','Quality');\n        this.controlText('Quality');\n\n        if(options.dynamicLabel){\n          videojs.addClass(this.label, 'vjs-resolution-button-label');\n          this.el().appendChild(this.label);\n        }else{\n          var staticLabel \x3d document.createElement('span');\n          videojs.addClass(staticLabel, 'vjs-resolution-button-staticlabel');\n          this.el().appendChild(staticLabel);\n        }\n        player.on('updateSources', videojs.bind( this, this.update ) );\n      }\n    } );\n    ResolutionMenuButton.prototype.createItems \x3d function(){\n      var menuItems \x3d [];\n      var labels \x3d (this.sources \x26\x26 this.sources.label) || {};\n\n      // FIXME order is not guaranteed here.\n      for (var key in labels) {\n        if (labels.hasOwnProperty(key)) {\n          menuItems.push(new ResolutionMenuItem(\n            this.player_,\n            {\n              label: key,\n              src: labels[key],\n              selected: key \x3d\x3d\x3d (this.currentSelection ? this.currentSelection.label : false)\n            })\n          );\n        }\n      }\n      return menuItems;\n    };\n    ResolutionMenuButton.prototype.update \x3d function(){\n      this.sources \x3d this.player_.getGroupedSrc();\n      this.currentSelection \x3d this.player_.currentResolution();\n      this.label.innerHTML \x3d this.currentSelection ? this.currentSelection.label : '';\n      return MenuButton.prototype.update.call(this);\n    };\n    ResolutionMenuButton.prototype.buildCSSClass \x3d function(){\n      return MenuButton.prototype.buildCSSClass.call( this ) + ' vjs-resolution-button';\n    };\n    MenuButton.registerComponent('ResolutionMenuButton', ResolutionMenuButton);\n\n    /**\n     * Initialize the plugin.\n     * @param {object} [options] configuration for the plugin\n     */\n    videoJsResolutionSwitcher \x3d function(options) {\n      var settings \x3d videojs.mergeOptions(defaults, options),\n          player \x3d this,\n          groupedSrc \x3d {},\n          currentSources \x3d {},\n          currentResolutionState \x3d {};\n\n      /**\n       * Updates player sources or returns current source URL\n       * @param   {Array}  [src] array of sources [{src: '', type: '', label: '', res: ''}]\n       * @returns {Object|String|Array} videojs player object if used as setter or current source URL, object, or array of sources\n       */\n      player.updateSrc \x3d function(src){\n        //Return current src if src is not given\n        if(!src){ return player.src(); }\n\n        // Sort sources\n        this.currentSources \x3d src.sort(compareResolutions);\n        this.groupedSrc \x3d bucketSources(this.currentSources);\n        // Pick one by default\n        var chosen \x3d chooseSrc(this.groupedSrc, this.currentSources);\n        this.currentResolutionState \x3d {\n          label: chosen.label,\n          sources: chosen.sources\n        };\n\n        player.trigger('updateSources');\n        player.setSourcesSanitized(chosen.sources, chosen.label);\n        player.trigger('resolutionchange');\n        return player;\n      };\n\n      /**\n       * Returns current resolution or sets one when label is specified\n       * @param {String}   [label]         label name\n       * @param {Function} [customSourcePicker] custom function to choose source. Takes 2 arguments: sources, label. Must return player object.\n       * @returns {Object}   current resolution object {label: '', sources: []} if used as getter or player object if used as setter\n       */\n      player.currentResolution \x3d function(label, customSourcePicker){\n        if(label \x3d\x3d null) { return this.currentResolutionState; }\n\n        // Lookup sources for label\n        if(!this.groupedSrc || !this.groupedSrc.label || !this.groupedSrc.label[label]){\n          return;\n        }\n        var sources \x3d this.groupedSrc.label[label];\n        // Remember player state\n        var currentTime \x3d player.currentTime();\n        var isPaused \x3d player.paused();\n\n        // Hide bigPlayButton\n        if(!isPaused){\n          this.player_.bigPlayButton.hide();\n        }\n\n        // Change player source and wait for loadeddata event, then play video\n        // loadedmetadata doesn't work right now for flash.\n        // Probably because of https://github.com/videojs/video-js-swf/issues/124\n        // If player preload is 'none' and then loadeddata not fired. So, we need timeupdate event for seek handle (timeupdate doesn't work properly with flash)\n        var handleSeekEvent \x3d 'loadeddata';\n        if(this.player_.techName_ !\x3d\x3d 'Youtube' \x26\x26 this.player_.preload() \x3d\x3d\x3d 'none' \x26\x26 this.player_.techName_ !\x3d\x3d 'Flash') {\n          handleSeekEvent \x3d 'timeupdate';\n        }\n        player\n          .setSourcesSanitized(sources, label, customSourcePicker || settings.customSourcePicker)\n          .one(handleSeekEvent, function() {\n            player.currentTime(currentTime);\n            player.handleTechSeeked_();\n            if(!isPaused){\n              // Start playing and hide loadingSpinner (flash issue ?)\n              player.play().handleTechSeeked_();\n            }\n            player.trigger('resolutionchange');\n          });\n        return player;\n      };\n\n      /**\n       * Returns grouped sources by label, resolution and type\n       * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\n       */\n      player.getGroupedSrc \x3d function(){\n        return this.groupedSrc;\n      };\n\n      player.setSourcesSanitized \x3d function(sources, label, customSourcePicker) {\n        this.currentResolutionState \x3d {\n          label: label,\n          sources: sources\n        };\n        if(typeof customSourcePicker \x3d\x3d\x3d 'function'){\n          return customSourcePicker(player, sources, label);\n        }\n        player.src(sources.map(function(src) {\n          return {src: src.src, type: src.type, res: src.res};\n        }));\n        return player;\n      };\n\n      /**\n       * Method used for sorting list of sources\n       * @param   {Object} a - source object with res property\n       * @param   {Object} b - source object with res property\n       * @returns {Number} result of comparation\n       */\n      function compareResolutions(a, b){\n        if(!a.res || !b.res){ return 0; }\n        return (+b.res)-(+a.res);\n      }\n\n      /**\n       * Group sources by label, resolution and type\n       * @param   {Array}  src Array of sources\n       * @returns {Object} grouped sources: { label: { key: [] }, res: { key: [] }, type: { key: [] } }\n       */\n      function bucketSources(src){\n        var resolutions \x3d {\n          label: {},\n          res: {},\n          type: {}\n        };\n        src.map(function(source) {\n          initResolutionKey(resolutions, 'label', source);\n          initResolutionKey(resolutions, 'res', source);\n          initResolutionKey(resolutions, 'type', source);\n\n          appendSourceToKey(resolutions, 'label', source);\n          appendSourceToKey(resolutions, 'res', source);\n          appendSourceToKey(resolutions, 'type', source);\n        });\n        return resolutions;\n      }\n\n      function initResolutionKey(resolutions, key, source) {\n        if(resolutions[key][source[key]] \x3d\x3d null) {\n          resolutions[key][source[key]] \x3d [];\n        }\n      }\n\n      function appendSourceToKey(resolutions, key, source) {\n        resolutions[key][source[key]].push(source);\n      }\n\n      /**\n       * Choose src if option.default is specified\n       * @param   {Object} groupedSrc {res: { key: [] }}\n       * @param   {Array}  src Array of sources sorted by resolution used to find high and low res\n       * @returns {Object} {res: string, sources: []}\n       */\n      function chooseSrc(groupedSrc, src){\n        var selectedRes \x3d settings['default']; // use array access as default is a reserved keyword\n        var selectedLabel \x3d '';\n        if (selectedRes \x3d\x3d\x3d 'high') {\n          selectedRes \x3d src[0].res;\n          selectedLabel \x3d src[0].label;\n        } else if (selectedRes \x3d\x3d\x3d 'low' || selectedRes \x3d\x3d null || !groupedSrc.res[selectedRes]) {\n          // Select low-res if default is low or not set\n          selectedRes \x3d src[src.length - 1].res;\n          selectedLabel \x3d src[src.length -1].label;\n        } else if (groupedSrc.res[selectedRes]) {\n          selectedLabel \x3d groupedSrc.res[selectedRes][0].label;\n        }\n\n        return {res: selectedRes, label: selectedLabel, sources: groupedSrc.res[selectedRes]};\n      }\n\n      function initResolutionForYt(player){\n        // Map youtube qualities names\n        var _yts \x3d {\n          highres: {res: 1080, label: '1080', yt: 'highres'},\n          hd1080: {res: 1080, label: '1080', yt: 'hd1080'},\n          hd720: {res: 720, label: '720', yt: 'hd720'},\n          large: {res: 480, label: '480', yt: 'large'},\n          medium: {res: 360, label: '360', yt: 'medium'},\n          small: {res: 240, label: '240', yt: 'small'},\n          tiny: {res: 144, label: '144', yt: 'tiny'},\n          auto: {res: 0, label: 'auto', yt: 'auto'}\n        };\n        // Overwrite default sourcePicker function\n        var _customSourcePicker \x3d function(_player, _sources, _label){\n          // Note that setPlayebackQuality is a suggestion. YT does not always obey it.\n          player.tech_.ytPlayer.setPlaybackQuality(_sources[0]._yt);\n          return player;\n        };\n        settings.customSourcePicker \x3d _customSourcePicker;\n\n        // Init resolution\n        player.tech_.ytPlayer.setPlaybackQuality('auto');\n\n        // This is triggered when the resolution actually changes\n        player.tech_.ytPlayer.addEventListener('onPlaybackQualityChange', function(event){\n          for(var res in _yts) {\n            if(res.yt \x3d\x3d\x3d event.data) {\n              player.currentResolution(res.label, _customSourcePicker);\n              return;\n            }\n          }\n        });\n\n        // We must wait for play event\n        player.one('play', function(){\n          var qualities \x3d player.tech_.ytPlayer.getAvailableQualityLevels();\n          var _sources \x3d [];\n\n          qualities.map(function(q){\n            _sources.push({\n              src: player.src().src,\n              type: player.src().type,\n              label: _yts[q].label,\n              res: _yts[q].res,\n              _yt: _yts[q].yt\n            });\n          });\n\n          player.groupedSrc \x3d bucketSources(_sources);\n          var chosen \x3d {label: 'auto', res: 0, sources: player.groupedSrc.label.auto};\n          player.trigger('updateSources');\n          player.setSourcesSanitized(chosen.sources, chosen.label,_customSourcePicker);\n        });\n      }\n\n      player.ready(function(){\n        if( settings.ui ) {\n          var menuButton \x3d new ResolutionMenuButton(player, {});\n          player.controlBar.resolutionSwitcher \x3d player.controlBar.el_.insertBefore(menuButton.el_, player.controlBar.getChild('fullscreenToggle').el_);\n          player.controlBar.resolutionSwitcher.dispose \x3d function(){\n            this.parentNode.removeChild(this);\n          };\n        }\n        if(player.options_.sources.length \x3e 1){\n          // tech: Html5 and Flash\n          // Create resolution switcher for videos form \x3csource\x3e tag inside \x3cvideo\x3e\n          var playableSources \x3d [];\n          for (var i \x3d 0; i \x3c player.options_.sources.length; i++) {\n            if (player.canPlayType(player.options_.sources[i].type) !\x3d\x3d '') {\n              playableSources.push(player.options_.sources[i]);\n            }\n          }\n\n          player.updateSrc(playableSources);\n        }\n\n        if(player.techName_ \x3d\x3d\x3d 'Youtube'){\n         // tech: YouTube\n         initResolutionForYt(player);\n        }\n      });\n\n    };\n\n    // register the plugin\n    videojs.plugin('videoJsResolutionSwitcher', videoJsResolutionSwitcher);\n  })(window, videojs);\n})();\n"},
281:function(f,e,c){c(12)(c(282))},282:function(f,e){f.exports="/*\n---\ndescription:     ScrollSpy\n\nauthors:\n  - David Walsh (http://davidwalsh.name)\n\nlicense:\n  - MIT-style license\n\nrequires:\n  core/1.2.1:   '*'\n\nprovides:\n  - ScrollSpy\n...\n*/\nvar ScrollSpy \x3d new Class({\n\n\t/* implements */\n\tImplements: [Options,Events],\n\n\t/* options */\n\toptions: {\n\t\tcontainer: window,\n\t\tmax: 0,\n\t\tmin: 0,\n      mode: 'vertical',\n      target: null\n      /*,\n\t\tonEnter: $empty,\n\t\tonLeave: $empty,\n\t\tonScroll: $empty,\n\t\tonTick: $empty\n\t\t*/\n\t},\n\n\t/* initialization */\n\tinitialize: function(options) {\n\t\t/* set options */\n\t\tthis.setOptions(options);\n\t\tthis.container \x3d document.id(this.options.container);\n\t\tthis.enters \x3d this.leaves \x3d 0;\n\t\tthis.inside \x3d false;\n      this.positions \x3d [];\n      this.currentEl \x3d this.options.container;\n\n      this.targetPositions();\n\n\t\t/* listener */\n\t\tvar self \x3d this;\n\t\tthis.listener \x3d function(e) {\n\t\t\t/* if it has reached the level */\n\t\t\tvar position \x3d self.container.getScroll(),\n            xy \x3d position[self.options.mode \x3d\x3d 'vertical' ? 'y' : 'x'],\n            target \x3d self.selectTarget(xy);\n\n         var min \x3d target.top,\n            max \x3d target.bottom,\n            isNewEl \x3d target.el !\x3d\x3d self.currentEl;\n\n         self.currentEl \x3d target.el;\n\n\t\t\t/* if we reach the minimum and are still below the max... */\n         if ((min \x3e 0 \x26\x26 max \x3e 0) || self.isWithinBounds(xy, min, max)) { \n            /* trigger enter event if necessary */\n            if(!self.inside || isNewEl) {\n               /* record as inside */\n               self.inside \x3d true;\n               self.enters++;\n               /* fire enter event */\n               self.fireEvent('enter',[position,self.currentEl,self.enters,e]);\n            }\n            /* trigger the \"tick\", always */\n            self.fireEvent('tick',\n             [position,self.inside,self.enters,self.leaves,e]);\n\t\t\t}\n\t\t\t/* trigger leave */\n\t\t\telse if (self.inside) {\n\t\t\t\tself.inside \x3d false;\n\t\t\t\tself.leaves++;\n\t\t\t\tself.fireEvent('leave',[position,self.currentEl,self.leaves,e]);\n\t\t\t}\n\t\t\t/* fire scroll event */\n         self.fireEvent('scroll',\n          [position,self.inside,self.enters,self.leaves,e]);\n\t\t};\n\t\t\n\t\t/* make it happen */\n\t\tthis.addListener();\n\t},\n\n   selectTarget: function(xy) {\n      var targetPos \x3d 0, bottom \x3d 0, top \x3d 0, windowBottom \x3d 0, windowTop \x3d 0,\n         windowSize \x3d window.innerHeight;\n\n      if (this.positions.length !\x3d\x3d 0) {\n         for (var i \x3d 0; i \x3c this.positions.length; i++) {\n            windowTop \x3d xy;\n            windowBottom \x3d xy + windowSize;\n\n            top \x3d this.positions[i].top;\n            bottom \x3d this.positions[i].bottom;\n\n            if (top \x3c\x3d windowBottom \x26\x26 bottom \x3e\x3d windowTop) {\n               return {\n                  top: top,\n                  bottom: bottom,\n                  el: this.options.target[i]\n               };\n            }\n         }\n\n         return {\n            top: -1,\n            bottom: -1,\n            el: this.currentEl\n         };\n      } else {\n         return {\n            top: this.options.min,\n            bottom: this.options.max,\n            el: this.currentEl\n         };\n      }\n   },\n\n   isWithinBounds: function(curr, min, max) {\n      return curr \x3e\x3d min \x26\x26 (max \x3d\x3d 0 || curr \x3c\x3d max);\n   },\n\n   targetPositions: function() {\n      var self \x3d this;\n\n      self.positions \x3d [];\n      self.options.target.each(function(el) { \n         self.positions.push(el.getCoordinates());\n         self.currentEl \x3d el;\n      });\n   },\n\t\n\t/* starts the listener */\n\tstart: function() {\n\t\tthis.container.addEvent('scroll',this.listener);\n\n      // Reset position calculations on page load, because images can change\n      // the positions of headings.\n      window.addEvent('load', this.targetPositions.bind(this));\n      window.addEvent('resize:pause(300)', this.targetPositions.bind(this));\n\t},\n\t\n\t/* stops the listener */\n\tstop: function() {\n\t\tthis.container.removeEvent('scroll',this.listener);\n\t},\n\n   /**\n    * Run the scroll listener without an actual scroll event occuring. Useful\n    * to run once when the page first loads.\n    */\n   runOnce: function() {\n      this.listener();\n   },\n\n\t/* legacy */\n\taddListener: function() {\n\t\tthis.start();\n\t}\n});\n"},
283:function(f,e,c){onDomReady(function(){var a=videojs.getComponent("Button"),b=videojs.getComponent("BigPlayButton"),d=videojs.extend(b,{constructor:function(a,d){b.call(this,a,d);this.on(a,"play",this.onPlay);this.on(a,"pause",this.onPause);this.on(a,"ended",this.show);this.on(a,"mouseover",this.onMouseover);this.on(a,"mouseout",this.onMouseout)},buildCSSClass:function(){return"vjs-big-button "+b.prototype.buildCSSClass.call(this)},handleClick:function(){this.player().currentTime()||this.player().currentTime(0);
this.player().paused()?this.player().play():this.player().pause()},onMouseover:function(){this.player().paused()?this.onPause():this.onPlay();this.showButton()},onMouseout:function(){this.hideButton()},onKeyPress:function(a){},onPlay:function(){this.player().scrubbing()||this.el().hide()},onPause:function(){this.player().scrubbing()||this.el().show()},showButton:function(){this.el().style.opacity="1"},hideButton:function(){this.el().style.opacity="0"}}),c=videojs.extend(a,{buttonText:"Restart",buildCSSClass:function(){return"vjs-restart-button fa fa-repeat "+
a.prototype.buildCSSClass.call(this)},handleClick:function(){this.player().currentTime()&&(this.player().currentTime(0),this.player().play())}}),e=videojs.getComponent("ResolutionMenuItem");if(e){var f=e.prototype.handleClick;e.prototype.handleClick=function(a){f.call(this,a);this.player().trigger("userresolutionchange")}}videojs.registerComponent("BigPlayButton",d);videojs.registerComponent("RestartControl",c);var k=function(a,b){b=b||a.getParent().getSize().x;a=a.getChildren("source[type\x3dvideo/mp4][label][res]").getProperties("label",
"res").sort(function(a,b){return+a.res-+b.res});var d=Array.filter(a,function(a){return+a.res>b}),c=null;return 0<d.length?c=d[0]:0<a.length&&(c=a.last()),c},l=Browser.ie8||Browser.ie7||Browser.ie6;videojs.options.flash.swf=window.shared_constants.BaseURI("STATIC_FILE_VIDEO_SWF");$$("video.video-js").each(function(a){if(0!==a.getChildren("source").length){var b=""!==a.canPlayType("video/mp4"),d=k(a)||{res:"low"};d={preload:"none",loop:!1,bigPlayButton:!0,controlBar:{children:["playToggle","muteToggle",
"progressControl","fullscreenToggle","restartControl"]},width:a.getProperty("width"),height:a.getProperty("height"),fluid:!1,plugins:b?{videoJsResolutionSwitcher:{default:d.res}}:{}};var c=videojs(a,d);if(b){var e=0,g=Utils.rateLimiter(1E3,function(){var b=a.getParent();b&&(b=Math.floor(b.getSize().x),e!==b&&(e=b,(b=k(a))&&c.currentResolution(b.label)))});c.on("useractive",g);c.on("timeupdate",g);c.one("userresolutionchange",function(){c.off("useractive",g);c.off("timeupdate",g)})}if(c.on("ended",
function(){c.muted(!0);setTimeout(function(){c.play()},0)}),!l){var f=c.el().getElement(".vjs-big-play-button"),h=function(a){"space"===a.key&&"BODY"===a.target.tagName&&(c.paused()?c.play():c.pause(),a.preventDefault())};c.ready(function(){"undefined"!=typeof ScrollSpy&&new ScrollSpy({target:[c.el()],onEnter:function(a,b,d){window.addEvent("keydown",h);c.paused()&&(f.style.opacity="1")},onLeave:function(a,b,d){window.removeEvent("keydown",h);c.paused()||c.pause();f.style.opacity="0"}})})}}else(b=
a.getParent(".js-step-main-media"))&&(b.grab(new Element("img.vjs-processing-poster",{src:a.getAttribute("poster")})),b.grab(new Element("div.processingIcon")),b.addClass("videoProcessing"),a.destroy())})})},511:function(f,e,c){var a={toggle:"js-content-dropdown-toggle",close:"js-content-dropdown-close",container:"js-content-dropdown-container",cssExpanded:"content-dropdown-expanded",cssNotification:"content-dropdown-notification",forceCloseOpenedDropdown:!0};window.ContentDropdownGroup=function(b,
d){d=Object.merge({},a,d);var c,e=null,f=function(){null!==e&&(e.removeClass(d.cssExpanded),e.getChildren(".content-dropdown-list").dissolve({duration:100}),document.removeEvent("scroll",k),e=null)},k=Utils.rateLimiter(250,function(){100<Math.abs(c-window.getScroll().y)&&(null===e||"visible"!=e.getStyle("overflow")||f())});window.addEvent("click",function(a,b){d.forceCloseOpenedDropdown&&e&&a.target&&!e.contains(a.target)&&"visible"==e.getStyle("overflow")&&f()});b.addEvent("click:relay(."+d.toggle+
")",function(a,b){a=b.getParent("."+d.container);b=a.getChildren(".content-dropdown-list");a.hasClass(d.cssExpanded)?f():(f(),a.removeClass(d.cssNotification),e=a.addClass(d.cssExpanded),b.hide().reveal({duration:100,transitionOpacity:!0}),document.addEvent("scroll",k),c=window.getScroll().y)});b.addEvent("click:relay(."+d.close+")",f)}},512:function(f,e,c){Object.defineProperty(e,"__esModule",{value:!0});f=e.Suggest=window.Suggest=new Class({Extends:Autocompleter.Request.API_2_0,el:null,initialize:function(a,
b){(b=Object.merge({fxOptions:null,doctypes:null,langid:null,fallbackToDefaultLanguage:!1,className:"blurb-finder",showImages:!0,endpoint:"suggest",maxChoices:5,minLength:0,truncateText:!1,overflow:!1,overflowMargin:0,injectChoice:this.injectChoice.bind(this),getValue:this.getValue.bind(this),filterSubset:!0,onShow:this.onShow.bind(this),queryParams:{}},b)).getData={};b.doctypes&&(b.getData.doctypes=b.doctypes);b.langid&&(b.getData.langid=b.langid);b.fallbackToDefaultLanguage&&(b.getData.fallbackToDefaultLanguage=
!0);delete b.doctypes;delete b.langid;delete b.fallbackToDefaultLanguage;this.el=a;this.parent(this.el,b.endpoint,b);this.url=this.request.request.options.url;this.choices.addEvent("mousedown",function(a){a.stop()})},query:function(){this.toggleIndicator(!0);var a=new URI(this.url+"/"+encodeURIComponent(this.queryValue));a.setData(this.options.queryParams);this.request.request.options.url=a.toString();a=Object.clone(this.options.getData)||{};this.fireEvent("onRequest",[this.element,this.request,a,
this.queryValue]);this.request.send({data:a})},queryResponse:function(a){this.toggleIndicator(!1);this.fireEvent("onComplete",[this.element,this.request]);a=JSON.decode(a);this.update(a&&a.results)},getValue:function(a){return a.title},onShow:function(a,b,d){if((a=b.getElement(".blurb-image"))&&a.isVisible()){d=b.getElement(".blurb-item").getDimensions(!0).width;b=b.getElements(".blurb-text");var c=d-a.getDimensions(!0).width-20;b.each(function(a){a.setStyle("width",c)})}}});c=(e.SuggestAuthors=window.SuggestAuthors=
new Class({Extends:f,initialize:function(a,b){b=Object.merge({className:"autocompleter-choices",endpoint:"users/search",multiple:!0,maxChoices:5},b);this.parent(a,b)},injectChoice:function(a){var b=null!==a.unique_username?"(@"+a.unique_username+")":"",d={userid:a.userid,name:a.username,uniqueName:b,avatar:a.image.mini};d=window.hbsTemplates("AUTHOR_AUTOCOMPLETER_ITEM_HBS")(d);d.inputValue=a.username+b;this.addChoiceEvents(d).inject(this.choices)}}),e.SuggestDevices=window.SuggestDevices=new Class({Extends:f,
initialize:function(a,b){b=Object.merge({doctypes:"device",truncateText:90},b);this.parent(a,b)},injectChoice:function(a){if(this.el.isDisplayed()){var b=a.text&&this.options.truncateText?a.text.truncate(this.options.truncateText,"\u2026"," "):a.text;b=this.markQueryValue(b);b={showImage:this.options.showImages,blurbImage:a.image?a.image.mini:window.shared_constants.GuideURI("TOPIC_NO_IMAGE_MINI"),title:a.title,displayTitle:this.markQueryValue(a.display_title),summary:b};a.newItem?b.blurbId="blurb-new":
b.blurbId="blurb-"+a.dataType+"-"+a[a.dataType+"id"];b=window.hbsTemplates("BLURB_HBS")(b);b.store("blurb",a);b.inputValue=this.options.getValue?this.options.getValue(a):a.type+":"+a.id;a.newItem&&b.addClass("blurb-add-new");this.addChoiceEvents(b).inject(this.choices)}}}));c=(e.SuggestProducts=window.SuggestProducts=new Class({Extends:f,initialize:function(a,b){b=Object.merge({doctypes:"product"},b);this.parent(a,b)},injectChoice:function(a){if(this.el.isDisplayed()){var b=a.text,d="blurb-"+a.dataType+
"-"+a.productCode;this.options.hideOptions||(d="blurb-"+a.dataType+"-"+a.itemCode,a.optionTitle&&(b=a.optionTitle));this.options.truncateText&&b.truncate(this.options.truncateText,"\u2026"," ");b=this.markQueryValue(b);b={blurbId:d,showImage:this.options.showImages,blurbImage:a.image?a.image.mini:window.shared_constants.GuideURI("TOPIC_NO_IMAGE_MINI"),title:a.title,displayTitle:this.markQueryValue(a.title),summary:b,productBlurb:a};b=window.hbsTemplates("BLURB_HBS")(b);a.queryValue=this.queryValue;
b.store("blurb",a);b.inputValue=this.options.getValue?this.options.getValue(a):a.type+":"+a.id;this.addChoiceEvents(b).inject(this.choices)}}}),e.SuggestItems=window.SuggestItems=new Class({Extends:c,initialize:function(a,b){b=Object.merge({doctypes:"item"},b);this.parent(a,b)},queryResponse:function(a){this.toggleIndicator(!1);this.fireEvent("onComplete",[this.element,this.request]);var b=JSON.decode(a);a={newItem:!0,title:b.query,display_title:_js("Add new %1 '%2'").replace("%1",this.options.itemType).replace("%2",
b.query),text:_js("Create a new %1 with this name.").replace("%1",this.options.itemType),mini:window.shared_constants.GuideURI("NO_IMAGE_MINI")};var d=b.results.filter(function(a){return a.title.toLowerCase()===b.query.toLowerCase()});b.query&&!d.length&&b.results.push(a);this.update(b&&b.results)}}),e.SuggestGuides=window.SuggestGuides=new Class({Extends:f,initialize:function(a,b){(b=Object.merge({doctypes:"guide",prereqOnlyOkay:!1,inProgressOkay:!1,queryParams:{}},b)).prereqOnlyOkay&&(b.queryParams.includePrereqOnlyGuides=
!0);b.inProgressOkay&&(b.queryParams.includeInProgressGuides=!0);this.parent(a,b)},injectChoice:function(a){if(this.el.isDisplayed()){var b="blurb-"+a.dataType+"-"+a[a.dataType+"id"],d=a.image?a.image.mini:window.shared_constants.GuideURI("GUIDE_NO_MAIN_IMAGE_MINI"),c=a.text&&this.options.truncateText?a.text.truncate(this.options.truncateText,"\u2026"," "):a.summary||"";b=window.hbsTemplates("BLURB_HBS")({blurbId:b,showImage:this.options.showImages,blurbImage:d,title:a.title,displayTitle:this.markQueryValue(a.title),
summary:this.markQueryValue(c)});a.queryValue=this.queryValue;b.store("blurb",a);b.inputValue=this.options.getValue?this.options.getValue(a):a.type+":"+a.id;this.addChoiceEvents(b).inject(this.choices)}}}));e.SuggestDeviceGuides=window.SuggestDeviceGuides=new Class({Extends:c,global:!1,wrapperEl:null,globalToggleEl:null,noResultsEl:null,noResultsQueryEl:null,initialize:function(a,b){(b=Object.merge({device:null,className:"blurb-finder",zIndex:42,queryParams:{}},b)).queryParams.guideDevice=b.device;
var c=window.hbsTemplates("SUGGEST_GLOBAL_TOGGLE_HBS")({choicesClass:b.className,zIndex:b.zIndex,objectNameSingular:App.objectNameSingular.toLowerCase()}).hide().inject(document.body,"top");this.wrapperEl=c;this.globalToggleEl=c.getElement(".js-blurb-finder-global-toggle");this.noResultsEl=c.getElement(".js-no-matches");this.noResultsQueryEl=this.noResultsEl.getElement("span");this.globalToggleEl.addEvent("mousedown",function(a){a.stop();this.toggleGlobal()}.bind(this));b.customChoices=c.getElement("ul");
b.emptyChoices=this.showEmptyChoices;this.parent(a,b)},showChoices:function(){this.choices.getFirst(this.options.choicesMatch)?(this.wrapperEl.removeClass("empty").show(),this.parent(),this.positionRelativeToInput(this.wrapperEl)):this.showEmptyChoices()},showEmptyChoices:function(){this.choices.setStyle("height","auto");this.queryValue?(this.noResultsQueryEl.set("text",this.queryValue),this.positionRelativeToInput(this.wrapperEl),this.wrapperEl.addClass("empty").show()):this.hideChoices()},hideChoices:function(a){this.parent(a);
this.wrapperEl.hide()},toggleGlobal:function(){this.global=!this.global;this.globalToggleEl.toggleClass("active");this.global?delete this.options.queryParams.guideDevice:this.options.queryParams.guideDevice=this.options.device;this.query()}});e.SuggestTags=window.SuggestTags=new Class({Extends:f,initialize:function(a,b){b=Object.merge({className:"autocompleter-choices",endpoint:"suggest/tags",multiple:!0,maxChoices:10,doctypes:"all"},b);this.parent(a,b)},injectChoice:function(a){var b={title:this.markQueryValue(a)};
b=window.hbsTemplates("TAG_AUTOCOMPLETER_ITEM_HBS")(b);b.inputValue=a;this.addChoiceEvents(b).inject(this.choices)}})},513:function(f,e,c){onDomReady(function(){$$(".js-status-cancel").each(function(a){var b=a.getParent(),c=b.getParent();b.get("id");a.addEvent("click",function(a){1>=c.getChildren().length?c.dispose():b.dispose()})})})}},[[1799,0,1]]]);
